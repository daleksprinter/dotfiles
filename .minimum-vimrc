#basic
"editor - basic
set whichwrap=b,s,h,l,<,>,[,] #行を跨いで移動
set mouse=a
syntax on
set clipboard=unnamed,autoselect
set noerrorbells
set backspace=indent,eol,start
set virtualedit+=onemore
set ttimeoutlen=10
set completeopt=menuone,noinsert
set encoding=UTF-8
filetype plugin on
set scrolloff=5
set wildmenu
set hidden
set nobackup
set nowritebackup
set cmdheight=2
set updatetime=300
set shortmess+=c

"editor - display
set cursorline
set number
set showmatch

"editor - search
set incsearch "incremental search
set ignorecase
set smartcase
set hlsearch "highlight search

"status line settings
set laststatus=2
set title

"indent settings
set breakindent
set smartindent

"file settings
set autoread
set modifiable
set write
set noswapfile

"editor - tab setting
set tabstop=4
set shiftwidth=4
set autoindent
set expandtab

"ファイル開いた時に最後に編集した行に移動
if has("autocmd")
	au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

"undo永続化
if has('persistent_undo')
	set undodir=~/.vim/undo
	set undofile
endif

" 補完表示時のEnterで改行をしない
inoremap <expr><CR>  pumvisible() ? "<C-y>" : "<CR>"

autocmd FileType scala let b:coc_root_patterns = ['build.sbt']
au BufRead,BufNewFile *.sbt set filetype=scala



#mapping
let mapleader = "\<Space>"

"keybind
nnoremap O :<C-u>call append(expand('.'), '')<Cr>j

nnoremap ; :
nnoremap : ;
map <S-k> <Nop>

nnoremap Y y$

noremap H ^
noremap L $l

" nnoremap J gT
" nnoremap K gt

"検索行が真ん中に来るようにする
nmap n nzz
nnoremap N Nzzzv
nmap * *zz
nmap g* g*zz
nmap g# g#zz

"keybind - emacs
inoremap <C-d> <Del>
inoremap <C-h> <BS>
inoremap <C-a> <home>
inoremap <C-e> <End>
inoremap <C-p> <Up>
inoremap <C-n> <Down>
inoremap <C-f> <right>
inoremap <C-b> <left>
inoremap <C-k> <Esc>lc$

nnoremap <C-w> diw
nnoremap <C-h> hx
nnoremap <C-d> x

"keybind - cursormove
noremap <C-j> }zz
noremap <C-k> {zz
" noremap j gjzz
" nnoremap k gkzz

nnoremap <down> gjzz
nnoremap <up> gkzz
nnoremap <C-o> <C-o>zz
nnoremap <C-i> <C-i>zz
nnoremap <C-f> <C-f>zz
nnoremap <C-b> <C-b>zz

nnoremap <esc><esc> :noh<cr><esc>

"keybind split, moving window
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sl <C-w>l
nnoremap sh <C-w>h
nnoremap ss :<C-u>sp<CR><C-w>j
nnoremap sv :<C-u>vs<CR><C-w>l
" nnoremap sz :call ToggleWindowSize()<CR>

"tab move
nnoremap    [Tag]   <Nop>
nmap   s [Tag]
for n in range(1, 9)
	execute 'nnoremap <silent> [Tag]'.n  ':<C-u>tabnext'.n.'<CR>'
endfor

nnoremap <silent> [Tag]c :tablast <bar> tabnew<CR>
nnoremap <silent> [Tag]x :tabclose<CR>
nnoremap <silent> [Tag]n :tabnext<CR>
nnoremap <silent> [Tag]p :tabprevious<CR>


nnoremap p "+p
nnoremap # :%s/<C-r>///g<Left><Left>
